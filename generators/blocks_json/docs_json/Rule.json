{"block_id": "PYRITE_RULE", "block": "RULE", "summary": "**RULE** blocks are triggered from an in-game **EVENT**. When an **EVENT** triggers, this block will check if its **CONDITION** has been met and then execute all of the **ACTIONS**.  \n**Types of **RULE** Blocks Events**\n**Ongoing**\nOngoing **EVENT** types continually check if its **CONDITION** has become **_True_**. If so, the **ACTIONS** will be executed once. In order for the **EVENT** to execute again, the **CONDITION** must become **_False_** before becoming **_True_** again.  \n   \nOngoing **EVENT** types currently exist within the context of:  \n  \n- **Global**  \n- **Player**  \n- **Team**  \n- **Vehicle**  \n- **CapturePoint**  \n  \nWithin the **Player** and **Team** contexts, payload value blocks, such as **EventPlayer** and **EventTeam**, can be used to refer to the specific **Player** or **Team** within the **EVENT**. _Note: In FFA, Ongoing **Team** will not execute at all._\n**OnPlayerDied**\nThis will trigger whenever a **Player** dies. _Payloads: **EventPlayer** (Victim), **EventOtherPlayer** (Killer), **EventDeathType** (Victim Death Type), **EventWeapon** (Killing Weapon)_\n**OnPlayerDeployed**\nThis will trigger whenever a **Player** deploys. _Payloads: **EventPlayer** (Deployed Player)_\n**OnPlayerJoinGame**\nThis will trigger when a **Player** joins the game. _Payloads: **EventPlayer** (Joined Player)_\n**OnPlayerLeaveGame**\nThis will trigger when any player leaves the game.\n**OnPlayerEarnedKill**\nThis will trigger when a **Player** earns a kill against another **Player**. _Payloads: **EventPlayer** (Killer), **EventOtherPlayer** (Victim), **EventDeathType** (Victim Death Type), **EventWeapon** (Killing Weapon)_\n**OnGameModeEnding**\nThis will trigger when the gamemode ends.\n**OnMandown**\nThis will trigger when a **Player** is forced into the mandown state. _Payloads: **EventPlayer**  (Downed Player)_\n**OnRevived**\nThis will trigger when a **Player** is revived by another **Player**. _Payloads: **EventPlayer** (Revived Player), **EventOtherPlayer** (Reviver Player)_\n**OnTimeLimitReached**\nThis will trigger when the gamemode time limit has been reached.\n**OnGameModeStarted**\nThis will trigger at the start of the gamemode.\n**OnPlayerUndeploy**\nThis will trigger when the **Player** dies and returns to the deploy screen. _Payloads: **EventPlayer** (Dead Player)_\n**OnVehicleDeployed**\nThis will trigger when a **Vehicle** is called into the map. _Payloads: **EventVehicle** (Spawned Vehicle)_\n**OnVehicleDestroyed**\nThis will trigger when a **Vehicle** is destroyed. _Payloads: **EventVehicle** (Destroyed Vehicle)_\n**OnPlayerEnterVehicle**\nThis will trigger when a **Player** enters a **Vehicle**. _Payloads: **EventPlayer** (Player Who Enters), **EventVehicle** (Vehicle)_\n**OnPlayerExitVehicle**\nThis will trigger when a **Player** exits a **Vehicle**. _Payloads: **EventPlayer** (Player Who Exits), **EventVehicle** (Vehicle)_\n**OnPlayerEnterVehicleSeat**\nThis will trigger when a **Player** enters a **Vehicle** seat. _Payloads: **EventPlayer** (Player Who Enters Seat), **EventVehicle** (Vehicle), **EventSeat** (Seat Index)_\n**OnPlayerExitVehicleSeat**\nThis will trigger when a **Player** exits a **Vehicle** seat. _Payloads: **EventPlayer** (Player Who Exits Seat), **EventVehicle** (Vehicle), **EventSeat** (Seat Index)_\n**OnCapturePointCaptured**\nThis will trigger when a team takes control of a **CapturePoint**. _Payloads: **EventCapturePoint** (Captured Capture Point)_\n**OnCapturePointCapturing**\nThis will trigger when a team begins capturing a **CapturePoint**. _Payloads: **EventCapturePoint** (Capture Point Being Captured)_\n**OnCapturePointLost**\nThis will trigger when a team loses control of a **CapturePoint**. _Payloads: **EventCapturePoint** (Lost Capture Point)_\n**OnCapturePointNeutralizing**\nThis will trigger when a team begins neutralizing a **CapturePoint**. _Payloads: **EventCapturePoint** (Capture Point Being Neutralized)_\n**OnPlayerEnterCapturePoint**\nThis will trigger when a **Player** enters a **CapturePoint** capturing area. _Payloads: **EventPlayer** (Player Entering Capture Area), **EventCapturePoint** (Capture Point Being Entered)_\n**OnPlayerExitCapturePoint**\nThis will trigger when a **Player** exits a **CapturePoint** capturing area. _Payloads: **EventPlayer** (Player Exiting Capture Area), **EventCapturePoint** (Capture Point Being Exited)_\n**OnMCOMArmed**\nThis will trigger when a **MCOM** is armed. _Payloads: **EventMCOM** (Armed MCOM), **EventPlayer** (Player Who Armed)_\n**OnMCOMDefused**\nThis will trigger when a **MCOM** is defused. _Payloads: **EventMCOM** (Defused MCOM), **EventPlayer** (Player Who Defused)_\n**OnMCOMDestroyed**\nThis will trigger when a **MCOM** is destroyed. _Payloads: **EventMCOM** (Destroyed MCOM)_\n**OnPlayerDamaged**\nThis will trigger when a **Player** takes damage. _Payloads: **EventPlayer** (Damaged Player), **EventOtherPlayer** (Damager Player), **EventDamageType** (Damage Type), **EventWeapon** (Damager Weapon)_\n**OnPlayerEarnKillAssist**\nThis will trigger when a **Player** earns a kill assist. _Payloads: **EventPlayer** (Assist Player), **EventOtherPlayer** (Victim)"}